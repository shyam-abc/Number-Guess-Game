{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\nimport Colors from \"./constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameIsOver = _useState4[0],\n      setGameIsOver = _useState4[1];\n\n  var _useFonts = useFonts({\n    'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  var pickedNumberHandler = function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  };\n\n  var gameOverHandler = function gameOverHandler() {\n    setGameIsOver(true);\n  };\n\n  var screen = _jsx(StartGameScreen, {\n    onPickNumber: pickedNumberHandler\n  });\n\n  if (userNumber) {\n    screen = _jsx(GameScreen, {\n      userNumber: userNumber,\n      onGameOver: gameOverHandler\n    });\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = _jsx(GameOverScreen, {});\n  }\n\n  return _jsx(LinearGradient, {\n    style: styles.rootScreen,\n    colors: [Colors.primary700, Colors.accent500],\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/Images/background.png\"),\n      resizeMode: \"cover\",\n      style: styles.rootScreen,\n      imageStyle: styles.backgroundImage,\n      children: _jsx(SafeAreaView, {\n        style: styles.rootScreen,\n        children: screen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});","map":{"version":3,"names":["useState","LinearGradient","useFonts","AppLoading","StartGameScreen","GameScreen","GameOverScreen","Colors","App","userNumber","setUserNumber","gameIsOver","setGameIsOver","require","fontsLoaded","pickedNumberHandler","pickedNumber","gameOverHandler","screen","styles","rootScreen","primary700","accent500","backgroundImage","StyleSheet","create","flex","opacity"],"sources":["/Users/shyamkrishnansudhir/Documents/React Native Udemy/Number Guess Game/App.js"],"sourcesContent":["import { StyleSheet, ImageBackground, SafeAreaView } from 'react-native';\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport StartGameScreen from './screens/StartGameScreen';\nimport GameScreen from './screens/GameScreen';\nimport GameOverScreen from './screens/GameOverScreen';\nimport Colors from './constants/colors';\n\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [gameIsOver, setGameIsOver] = useState(true);\n\n  const [fontsLoaded] = useFonts({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf')\n  });\n\n  if(!fontsLoaded){\n    return <AppLoading />\n  }\n\n  const pickedNumberHandler = (pickedNumber) => {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n  const gameOverHandler = () => {\n    setGameIsOver(true);\n  }\n\n  let screen = <StartGameScreen onPickNumber={pickedNumberHandler}/>;\n  if(userNumber){\n    screen = <GameScreen userNumber={userNumber} onGameOver={gameOverHandler}/>;\n  }\n  if(gameIsOver && userNumber){\n    screen = <GameOverScreen />\n  }\n\n  return (\n    <LinearGradient style={styles.rootScreen} \n                    colors={[Colors.primary700,Colors.accent500]}>\n      <ImageBackground \n          source={require('./assets/Images/background.png')}\n          resizeMode='cover'\n          style={styles.rootScreen}\n          imageStyle={styles.backgroundImage}\n          >\n          <SafeAreaView style={styles.rootScreen}>  \n            {screen}\n          </SafeAreaView>\n      </ImageBackground>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1,\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});\n"],"mappings":";;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,MAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAoCR,QAAQ,EAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCV,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOW,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,gBAAsBV,QAAQ,CAAC;IAC7B,aAAaW,OAAO,uCADS;IAE7B,kBAAkBA,OAAO;EAFI,CAAD,CAA9B;EAAA;EAAA,IAAOC,WAAP;;EAKA,IAAG,CAACA,WAAJ,EAAgB;IACd,OAAO,KAAC,UAAD,KAAP;EACD;;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,YAAD,EAAkB;IAC5CN,aAAa,CAACM,YAAD,CAAb;IACAJ,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAIA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5BL,aAAa,CAAC,IAAD,CAAb;EACD,CAFD;;EAIA,IAAIM,MAAM,GAAG,KAAC,eAAD;IAAiB,YAAY,EAAEH;EAA/B,EAAb;;EACA,IAAGN,UAAH,EAAc;IACZS,MAAM,GAAG,KAAC,UAAD;MAAY,UAAU,EAAET,UAAxB;MAAoC,UAAU,EAAEQ;IAAhD,EAAT;EACD;;EACD,IAAGN,UAAU,IAAIF,UAAjB,EAA4B;IAC1BS,MAAM,GAAG,KAAC,cAAD,KAAT;EACD;;EAED,OACE,KAAC,cAAD;IAAgB,KAAK,EAAEC,MAAM,CAACC,UAA9B;IACgB,MAAM,EAAE,CAACb,MAAM,CAACc,UAAR,EAAmBd,MAAM,CAACe,SAA1B,CADxB;IAAA,UAEE,KAAC,eAAD;MACI,MAAM,EAAET,OAAO,kCADnB;MAEI,UAAU,EAAC,OAFf;MAGI,KAAK,EAAEM,MAAM,CAACC,UAHlB;MAII,UAAU,EAAED,MAAM,CAACI,eAJvB;MAAA,UAMI,KAAC,YAAD;QAAc,KAAK,EAAEJ,MAAM,CAACC,UAA5B;QAAA,UACGF;MADH;IANJ;EAFF,EADF;AAeD;AAED,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,UAAU,EAAE;IACVM,IAAI,EAAE;EADI,CADmB;EAI/BH,eAAe,EAAE;IACfI,OAAO,EAAE;EADM;AAJc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}