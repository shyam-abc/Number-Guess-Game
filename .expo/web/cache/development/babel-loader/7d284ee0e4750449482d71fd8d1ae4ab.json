{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState } from \"react\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Colors from \"../constants/colors\";\nimport Title from \"../components/ui/Title\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredNumber('');\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid Number!', 'Enter between 1 and 99', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    props.onPickNumber(chosenNumber);\n  };\n\n  return _jsxs(View, {\n    style: styles.rootContainer,\n    children: [_jsx(Title, {\n      children: \"Guess My Number\"\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        children: \"Enter a Number\"\n      }), _jsx(TextInput, {\n        style: styles.numberInput,\n        maxLength: 2,\n        keyboardType: \"number-pad\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: numberInputHandler,\n        value: enteredNumber\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: resetInputHandler,\n            children: \"Reset\"\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: confirmInputHandler,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    marginTop: 100,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"names":["useState","PrimaryButton","Colors","Title","Card","InstructionText","StartGameScreen","props","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","onPickNumber","styles","rootContainer","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","marginTop","alignItems","height","width","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["/Users/shyamkrishnansudhir/Documents/React Native Udemy/Number Guess Game/screens/StartGameScreen.js"],"sourcesContent":["import { StyleSheet, View, TextInput, Alert } from \"react-native\";\nimport { useState } from \"react\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Colors from \"../constants/colors\";\nimport Title from \"../components/ui/Title\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\n\nconst StartGameScreen = (props) => {\n    const [enteredNumber, setEnteredNumber] = useState(''); \n    const numberInputHandler = (enteredText) => {\n        setEnteredNumber(enteredText);\n    };\n    const resetInputHandler = () => {\n        setEnteredNumber('');\n    }\n    const confirmInputHandler = () => {\n        const chosenNumber = parseInt(enteredNumber);\n        if(isNaN(chosenNumber) || chosenNumber<=0 || chosenNumber>99){\n            Alert.alert('Invalid Number!',\n                        'Enter between 1 and 99',\n                        [{text: 'Okay', style: 'destructive', onPress: resetInputHandler}])\n            return;\n        }\n        props.onPickNumber(chosenNumber);\n    };\n\n    return (\n    <View style={styles.rootContainer}>\n        <Title>Guess My Number</Title>\n        <Card>\n            <InstructionText>Enter a Number</InstructionText>\n            <TextInput style={styles.numberInput} \n                       maxLength={2} \n                       keyboardType='number-pad'\n                       autoCapitalize='none'\n                       autoCorrect={false}\n                       onChangeText={numberInputHandler}\n                       value={enteredNumber}\n                       />\n            <View style={styles.buttonsContainer}>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n                </View>\n                <View style={styles.buttonContainer}>\n                    <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\n                </View>\n            </View>\n        </Card>\n    </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    rootContainer: {\n        flex: 1,\n        marginTop: 100,\n        alignItems: 'center'\n    },\n    numberInput: {\n        height: 50,\n        width: 50,\n        fontSize: 32,\n        borderBottomColor: Colors.accent500,\n        borderBottomWidth: 2,\n        color: Colors.accent500,\n        marginVertical: 8,\n        fontWeight: 'bold',\n        textAlign: 'center'\n    },\n    buttonsContainer: {\n        flexDirection: 'row'\n    },\n    buttonContainer: {\n        flex: 1\n    }\n})\n\nexport default StartGameScreen;"],"mappings":";;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;EAC/B,gBAA0CP,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOQ,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD,EAAiB;IACxCF,gBAAgB,CAACE,WAAD,CAAhB;EACH,CAFD;;EAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAC5BH,gBAAgB,CAAC,EAAD,CAAhB;EACH,CAFD;;EAGA,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAC9B,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAD,CAA7B;;IACA,IAAGQ,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAE,CAArC,IAA0CA,YAAY,GAAC,EAA1D,EAA6D;MACzDG,KAAK,CAACC,KAAN,CAAY,iBAAZ,EACY,wBADZ,EAEY,CAAC;QAACC,IAAI,EAAE,MAAP;QAAeC,KAAK,EAAE,aAAtB;QAAqCC,OAAO,EAAET;MAA9C,CAAD,CAFZ;MAGA;IACH;;IACDL,KAAK,CAACe,YAAN,CAAmBR,YAAnB;EACH,CATD;;EAWA,OACA,MAAC,IAAD;IAAM,KAAK,EAAES,MAAM,CAACC,aAApB;IAAA,WACI,KAAC,KAAD;MAAA;IAAA,EADJ,EAEI,MAAC,IAAD;MAAA,WACI,KAAC,eAAD;QAAA;MAAA,EADJ,EAEI,KAAC,SAAD;QAAW,KAAK,EAAED,MAAM,CAACE,WAAzB;QACW,SAAS,EAAE,CADtB;QAEW,YAAY,EAAC,YAFxB;QAGW,cAAc,EAAC,MAH1B;QAIW,WAAW,EAAE,KAJxB;QAKW,YAAY,EAAEf,kBALzB;QAMW,KAAK,EAAEF;MANlB,EAFJ,EAUI,MAAC,IAAD;QAAM,KAAK,EAAEe,MAAM,CAACG,gBAApB;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;UAAA,UACI,KAAC,aAAD;YAAe,OAAO,EAAEf,iBAAxB;YAAA;UAAA;QADJ,EADJ,EAII,KAAC,IAAD;UAAM,KAAK,EAAEW,MAAM,CAACI,eAApB;UAAA,UACI,KAAC,aAAD;YAAe,OAAO,EAAEd,mBAAxB;YAAA;UAAA;QADJ,EAJJ;MAAA,EAVJ;IAAA,EAFJ;EAAA,EADA;AAwBH,CA3CD;;AA6CA,IAAMU,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,aAAa,EAAE;IACXM,IAAI,EAAE,CADK;IAEXC,SAAS,EAAE,GAFA;IAGXC,UAAU,EAAE;EAHD,CADc;EAM7BP,WAAW,EAAE;IACTQ,MAAM,EAAE,EADC;IAETC,KAAK,EAAE,EAFE;IAGTC,QAAQ,EAAE,EAHD;IAITC,iBAAiB,EAAElC,MAAM,CAACmC,SAJjB;IAKTC,iBAAiB,EAAE,CALV;IAMTC,KAAK,EAAErC,MAAM,CAACmC,SANL;IAOTG,cAAc,EAAE,CAPP;IAQTC,UAAU,EAAE,MARH;IASTC,SAAS,EAAE;EATF,CANgB;EAiB7BhB,gBAAgB,EAAE;IACdiB,aAAa,EAAE;EADD,CAjBW;EAoB7BhB,eAAe,EAAE;IACbG,IAAI,EAAE;EADO;AApBY,CAAlB,CAAf;AAyBA,eAAexB,eAAf"},"metadata":{},"sourceType":"module"}